name: 1. FMCSA Dynamic Dispatcher

on:
  repository_dispatch:
    types: [run-fmcsa-job-from-frontend]

jobs:
  dispatch:
    runs-on: ubuntu-latest
    outputs:
      batches: ${{ steps.create_matrix.outputs.batches }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Calculate number of batches needed
        id: calculate_batches
        run: |
          # Step 1: mc_list.txt mein total lines gino
          TOTAL_LINES=$(wc -l < mc_list.txt)
          
          # Step 2: Batch size set karo
          BATCH_SIZE=250
          
          # Step 3: Total batches ka hisaab lagao (ceiling division)
          NUM_BATCHES=$(( (TOTAL_LINES + BATCH_SIZE - 1) / BATCH_SIZE ))
          
          echo "Total MC Numbers: $TOTAL_LINES"
          echo "Batch Size: $BATCH_SIZE"
          echo "Number of Batches to Run: $NUM_BATCHES"
          
          # --- YAHAN ASAL, AAKHRI TABDEELI HAI ---
          # Hum GitHub Actions ka naya, sahi tareeqa istemal kar rahe hain
          echo "num_batches=$NUM_BATCHES" >> $GITHUB_OUTPUT

      - name: Create job matrix from batches
        id: create_matrix
        run: |
          # Step 4: 1 se lekar NUM_BATCHES tak numbers ki ek JSON list banao
          MATRIX=$(jq -c -n --argjson n ${{ steps.calculate_batches.outputs.num_batches }} '[range(1; $n + 1) | tostring]')
          
          echo "Generated Matrix: $MATRIX"
          
          # Hum yahan bhi naya, sahi tareeqa istemal kar rahe hain
          echo "batches=$MATRIX" >> $GITHUB_OUTPUT

  # Yeh ek naya "middle-man" job hai jo dynamic list par jobs chalayega
  trigger-extractors:
    needs: dispatch
    runs-on: ubuntu-latest
    strategy:
      # Yahan asal jadoo hai. Yeh 'batches' ki list par loop chalayega
      matrix:
        batch: ${{ fromJson(needs.dispatch.outputs.batches) }}
    steps:
      - name: Dispatch scraper for batch ${{ matrix.batch }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: extractor.yml
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: '{ "batch": "${{ matrix.batch }}" }'
